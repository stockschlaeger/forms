 // Einfacher Task Manager
class TaskManager {
    constructor() {
        this.tasks = [];
        this.nextId = 1;
    }

    // Task hinzufügen
    addTask(description, priority = 'medium') {
        const task = {
            id: this.nextId++,
            description: description,
            priority: priority,
            completed: false,
            createdAt: new Date().toISOString()
        };
        this.tasks.push(task);
        return task;
    }

    // Task als erledigt markieren
    completeTask(id) {
        const task = this.tasks.find(t => t.id === id);
        if (task) {
            task.completed = true;
            task.completedAt = new Date().toISOString();
            return task;
        }
        return null;
    }

    // Task löschen
    deleteTask(id) {
        const index = this.tasks.findIndex(t => t.id === id);
        if (index > -1) {
            return this.tasks.splice(index, 1)[0];
        }
        return null;
    }

    // Alle Tasks anzeigen
    getTasks(filter = 'all') {
        switch (filter) {
            case 'completed':
                return this.tasks.filter(t => t.completed);
            case 'pending':
                return this.tasks.filter(t => !t.completed);
            case 'high':
                return this.tasks.filter(t => t.priority === 'high');
            default:
                return this.tasks;
        }
    }

    // Tasks nach Priorität sortieren
    getTasksByPriority() {
        const priorityOrder = { 'high': 3, 'medium': 2, 'low': 1 };
        return [...this.tasks].sort((a, b) => 
            priorityOrder[b.priority] - priorityOrder[a.priority]
        );
    }
}

// Beispiel-Nutzung
const taskManager = new TaskManager();

// Tasks hinzufügen
taskManager.addTask("Einkaufen gehen", "high");
taskManager.addTask("E-Mails beantworten", "medium");
taskManager.addTask("Buch lesen", "low");

// Task erledigen
taskManager.completeTask(1);

// Alle Tasks anzeigen
console.log("Alle Tasks:", taskManager.getTasks());
console.log("Offene Tasks:", taskManager.getTasks('pending'));
console.log("Tasks nach Priorität:", taskManager.getTasksByPriority());